{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","Task","useContext","className","onClick","TaskList","length","TaskForm","setTitle","onSubmit","e","preventDefault","onChange","target","console","log","type","placeholder","required","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5878ecd8.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\nimport uuid from 'uuid';\r\n\r\nexport const TaskListContext = createContext()\r\n\r\nconst TaskListContextProvider = (props) => {\r\n    const initialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n\r\n    const [tasks, setTasks] = useState(initialState);\r\n\r\n    const [editItem, setEditItem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    const addTask = (title) => {\r\n        setTasks([...tasks, {title, id: uuid()}])\r\n    }\r\n\r\n    const removeTask = id => {\r\n        setTasks(tasks.filter(task => task.id !== id));\r\n    }\r\n\r\n    const clearList = () => {\r\n        setTasks([]);\r\n    }\r\n\r\n    const findItem = id => {\r\n        const item = tasks.find(task => task.id === id);\r\n\r\n        setEditItem(item);\r\n    };\r\n    const editTask = (title, id) => {\r\n        const newTasks = tasks.map(task => (task.id === id) ? {title, id} : task)\r\n\r\n        setTasks(newTasks);\r\n        setEditItem(null);\r\n    }\r\n\r\n    return (\r\n    <TaskListContext.Provider value={{tasks, addTask, removeTask, clearList, findItem, editTask, editItem}}>\r\n        {props.children}\r\n    </TaskListContext.Provider>\r\n    );\r\n}\r\n\r\nexport default TaskListContextProvider;","import React, { useContext } from 'react';\r\nimport {TaskListContext} from '../context/TaskListContext';\r\n\r\nconst Task = ({ task }) => {\r\n\r\n    const { removeTask, findItem } = useContext(TaskListContext)\r\n\r\n    return (\r\n        <li className=\"list-item\">\r\n            <span>{task.title}</span>\r\n            <div>\r\n                <button onClick={() => removeTask(task.id)} className=\"btn-delete task-btn\">\r\n                    <i className='fas fa-trash-alt'>\r\n\r\n                    </i>\r\n                </button>\r\n                <button onClick={() => findItem(task.id)} className=\"btn-edit task-btn\">\r\n                    <i className='fas fa-pen'>\r\n                        \r\n                    </i>\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React, {useContext} from 'react';\r\nimport {TaskListContext} from '../context/TaskListContext';\r\nimport Task from './Task';\r\n\r\nconst TaskList = () => {\r\n\r\n    const {tasks} = useContext(TaskListContext)\r\n    return (\r\n        <div>\r\n            {tasks.length ? (\r\n                <ul className=\"list\">\r\n                {tasks.map((task) => {\r\n                    return <Task task={task} key={task.id}/>;\r\n                })}\r\n            </ul>\r\n            ): (\r\n                <div className='no-tasks'>No Tasks</div>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList\r\n","import React, {useContext, useState, useEffect} from 'react';\r\nimport {TaskListContext} from '../context/TaskListContext';\r\n\r\nconst TaskForm = () => {\r\n    const { addTask, clearList, editItem, editTask } = useContext(TaskListContext);\r\n\r\n    const [title, setTitle] = useState('');\r\n\r\n    const handleChange = e => {\r\n        setTitle(e.target.value);\r\n        console.log(title);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(!editItem){\r\n            addTask(title);\r\n            setTitle('');\r\n        }\r\n        else {\r\n            editTask(title, editItem.id);\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(editItem){\r\n            setTitle(editItem.title)\r\n        }\r\n        else {\r\n            setTitle('');\r\n        }\r\n    }, [editItem]);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className='form'>\r\n            <input \r\n            onChange = {handleChange}\r\n            value={title}\r\n            type='text'\r\n            className='task-input'\r\n            placeholder='Add Task'\r\n            required\r\n            />\r\n            <div className='buttons'>\r\n                <button type='submit' className='btn add-task-btn'>\r\n                    {editItem ? 'Edit Task' : 'Add Task'}\r\n                </button>\r\n                <button onClick={clearList} className='btn clear-btn'>Clear</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TaskForm\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='header'>\r\n            <h1>Task Manager</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport TaskList from './TaskList';\r\nimport TaskListContextProvider from '../context/TaskListContext';\r\nimport TaskForm from './TaskForm';\r\nimport Header from './Header';\r\n\r\nconst App = () => {\r\n    return (\r\n        <TaskListContextProvider>\r\n        <div className='container'>\r\n            <div className='app-wrapper'>\r\n                <Header />\r\n                <div className='main'>\r\n                    <TaskForm />\r\n                    <TaskList />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </TaskListContextProvider>\r\n    );\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}